// Custom.scss
// Option A: Include all of Bootstrap

// Include any default variable overrides here (though functions won't be available)

@import "../../node_modules/bootstrap/scss/bootstrap";

// === TYPOGRAPHY START ===
h3 {
  font-weight: 700;
  font-size: 28px;
}

a {
  color: $gray-700;
  text-decoration: none;
}
// === TYPOGRAPHY END ===

// === NAVBAR START ===
.nav-link {
  color: $gray-700;

  &:hover,
  &:focus {
    color: $primary;
  }
}

.nav-link.active,
.nav-item.show .nav-link {
  color: $primary !important;
  background-color: transparent;
}
// === NAVBAR END ===

// === DROPDOWN START ===
.dropdown-item {
  &:hover,
  &:focus {
    color: $primary;
    background-color: transparent;
  }
}
// === DROPDOWN END ===

// === BUTTON START ===
@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @if $color == "light" {
      @include button-variant(
        $value,
        $value,
        $hover-background: shade-color($value, $btn-hover-bg-shade-amount),
        $hover-border: shade-color($value, $btn-hover-border-shade-amount),
        $active-background: shade-color($value, $btn-active-bg-shade-amount),
        $active-border: shade-color($value, $btn-active-border-shade-amount)
      );
    } @else if $color == "dark" or $color == "success" {
      @include button-variant(
        $value,
        $value,
        $hover-background: tint-color($value, $btn-hover-bg-tint-amount),
        $hover-border: tint-color($value, $btn-hover-border-tint-amount),
        $active-background: tint-color($value, $btn-active-bg-tint-amount),
        $active-border: tint-color($value, $btn-active-border-tint-amount)
      );
    } @else if $color == "warning" {
      @include button-variant(
        $value,
        $value,
        $hover-background: shade-color($value, $btn-hover-bg-shade-amount),
        $hover-border: shade-color($value, $btn-hover-border-shade-amount),
        $active-background: shade-color($value, $btn-active-bg-shade-amount),
        $active-border: shade-color($value, $btn-active-border-shade-amount)
      );
    } @else {
      @include button-variant(
        $value,
        $value,
        $white,
        $hover-color: $white,
        $hover-background: darken($value, 10%),
        $active-color: $white
      );
    }
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }

  //   .btn-pill-#{$color} {
  //     @include button-variant(
  //       $value,
  //       $value,
  //       $white,
  //       $hover-color: $white,
  //       $hover-background: darken($value, 10%),
  //       $active-color: $white
  //     );
  //     border-radius: 40px;
  //   }
}

.btn:focus,
.btn:active:focus,
.btn.active:focus {
  outline: none !important;
  box-shadow: none !important;
  border: 1px solid rgba(255, 255, 255, 0);
}
// === BUTTON END ===

// === CARD START ===

// === CARD END ===
